### YamlMime:ManagedReference
items:
- uid: SonarCloud.NET.Models.Changelog
  commentId: T:SonarCloud.NET.Models.Changelog
  id: Changelog
  parent: SonarCloud.NET.Models
  children:
  - SonarCloud.NET.Models.Changelog.Avatar
  - SonarCloud.NET.Models.Changelog.CreationDate
  - SonarCloud.NET.Models.Changelog.Diffs
  - SonarCloud.NET.Models.Changelog.IsUserActive
  - SonarCloud.NET.Models.Changelog.User
  - SonarCloud.NET.Models.Changelog.UserName
  langs:
  - csharp
  - vb
  name: Changelog
  nameWithType: Changelog
  fullName: SonarCloud.NET.Models.Changelog
  type: Class
  source:
    remote:
      path: src/SonarCloud.NET/Models/Hotspots.cs
      branch: documentation
      repo: https://github.com/pmdevers/SonarCloud.NET.git
    id: Changelog
    path: src/SonarCloud.NET/Models/Hotspots.cs
    startLine: 118
  assemblies:
  - SonarCloud.NET
  namespace: SonarCloud.NET.Models
  syntax:
    content: public class Changelog
    content.vb: Public Class Changelog
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: SonarCloud.NET.Models.Changelog.User
  commentId: P:SonarCloud.NET.Models.Changelog.User
  id: User
  parent: SonarCloud.NET.Models.Changelog
  langs:
  - csharp
  - vb
  name: User
  nameWithType: Changelog.User
  fullName: SonarCloud.NET.Models.Changelog.User
  type: Property
  source:
    remote:
      path: src/SonarCloud.NET/Models/Hotspots.cs
      branch: documentation
      repo: https://github.com/pmdevers/SonarCloud.NET.git
    id: User
    path: src/SonarCloud.NET/Models/Hotspots.cs
    startLine: 120
  assemblies:
  - SonarCloud.NET
  namespace: SonarCloud.NET.Models
  syntax:
    content: >-
      [JsonPropertyName("user")]

      public required string User { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("user")>

      Public Property User As String
  overload: SonarCloud.NET.Models.Changelog.User*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: user
- uid: SonarCloud.NET.Models.Changelog.UserName
  commentId: P:SonarCloud.NET.Models.Changelog.UserName
  id: UserName
  parent: SonarCloud.NET.Models.Changelog
  langs:
  - csharp
  - vb
  name: UserName
  nameWithType: Changelog.UserName
  fullName: SonarCloud.NET.Models.Changelog.UserName
  type: Property
  source:
    remote:
      path: src/SonarCloud.NET/Models/Hotspots.cs
      branch: documentation
      repo: https://github.com/pmdevers/SonarCloud.NET.git
    id: UserName
    path: src/SonarCloud.NET/Models/Hotspots.cs
    startLine: 123
  assemblies:
  - SonarCloud.NET
  namespace: SonarCloud.NET.Models
  syntax:
    content: >-
      [JsonPropertyName("userName")]

      public required string UserName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("userName")>

      Public Property UserName As String
  overload: SonarCloud.NET.Models.Changelog.UserName*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: userName
- uid: SonarCloud.NET.Models.Changelog.CreationDate
  commentId: P:SonarCloud.NET.Models.Changelog.CreationDate
  id: CreationDate
  parent: SonarCloud.NET.Models.Changelog
  langs:
  - csharp
  - vb
  name: CreationDate
  nameWithType: Changelog.CreationDate
  fullName: SonarCloud.NET.Models.Changelog.CreationDate
  type: Property
  source:
    remote:
      path: src/SonarCloud.NET/Models/Hotspots.cs
      branch: documentation
      repo: https://github.com/pmdevers/SonarCloud.NET.git
    id: CreationDate
    path: src/SonarCloud.NET/Models/Hotspots.cs
    startLine: 126
  assemblies:
  - SonarCloud.NET
  namespace: SonarCloud.NET.Models
  syntax:
    content: >-
      [JsonPropertyName("creationDate")]

      public DateTime CreationDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <JsonPropertyName("creationDate")>

      Public Property CreationDate As Date
  overload: SonarCloud.NET.Models.Changelog.CreationDate*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: creationDate
- uid: SonarCloud.NET.Models.Changelog.Diffs
  commentId: P:SonarCloud.NET.Models.Changelog.Diffs
  id: Diffs
  parent: SonarCloud.NET.Models.Changelog
  langs:
  - csharp
  - vb
  name: Diffs
  nameWithType: Changelog.Diffs
  fullName: SonarCloud.NET.Models.Changelog.Diffs
  type: Property
  source:
    remote:
      path: src/SonarCloud.NET/Models/Hotspots.cs
      branch: documentation
      repo: https://github.com/pmdevers/SonarCloud.NET.git
    id: Diffs
    path: src/SonarCloud.NET/Models/Hotspots.cs
    startLine: 129
  assemblies:
  - SonarCloud.NET
  namespace: SonarCloud.NET.Models
  syntax:
    content: >-
      [JsonPropertyName("diffs")]

      public Changelog.Diff[] Diffs { get; set; }
    parameters: []
    return:
      type: SonarCloud.NET.Models.Changelog.Diff[]
    content.vb: >-
      <JsonPropertyName("diffs")>

      Public Property Diffs As Changelog.Diff()
  overload: SonarCloud.NET.Models.Changelog.Diffs*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: diffs
- uid: SonarCloud.NET.Models.Changelog.Avatar
  commentId: P:SonarCloud.NET.Models.Changelog.Avatar
  id: Avatar
  parent: SonarCloud.NET.Models.Changelog
  langs:
  - csharp
  - vb
  name: Avatar
  nameWithType: Changelog.Avatar
  fullName: SonarCloud.NET.Models.Changelog.Avatar
  type: Property
  source:
    remote:
      path: src/SonarCloud.NET/Models/Hotspots.cs
      branch: documentation
      repo: https://github.com/pmdevers/SonarCloud.NET.git
    id: Avatar
    path: src/SonarCloud.NET/Models/Hotspots.cs
    startLine: 132
  assemblies:
  - SonarCloud.NET
  namespace: SonarCloud.NET.Models
  syntax:
    content: >-
      [JsonPropertyName("avatar")]

      public required string Avatar { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("avatar")>

      Public Property Avatar As String
  overload: SonarCloud.NET.Models.Changelog.Avatar*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: avatar
- uid: SonarCloud.NET.Models.Changelog.IsUserActive
  commentId: P:SonarCloud.NET.Models.Changelog.IsUserActive
  id: IsUserActive
  parent: SonarCloud.NET.Models.Changelog
  langs:
  - csharp
  - vb
  name: IsUserActive
  nameWithType: Changelog.IsUserActive
  fullName: SonarCloud.NET.Models.Changelog.IsUserActive
  type: Property
  source:
    remote:
      path: src/SonarCloud.NET/Models/Hotspots.cs
      branch: documentation
      repo: https://github.com/pmdevers/SonarCloud.NET.git
    id: IsUserActive
    path: src/SonarCloud.NET/Models/Hotspots.cs
    startLine: 135
  assemblies:
  - SonarCloud.NET
  namespace: SonarCloud.NET.Models
  syntax:
    content: >-
      [JsonPropertyName("isUserActive")]

      public bool IsUserActive { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("isUserActive")>

      Public Property IsUserActive As Boolean
  overload: SonarCloud.NET.Models.Changelog.IsUserActive*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: isUserActive
references:
- uid: SonarCloud.NET.Models
  commentId: N:SonarCloud.NET.Models
  href: SonarCloud.html
  name: SonarCloud.NET.Models
  nameWithType: SonarCloud.NET.Models
  fullName: SonarCloud.NET.Models
  spec.csharp:
  - uid: SonarCloud
    name: SonarCloud
    href: SonarCloud.html
  - name: .
  - uid: SonarCloud.NET
    name: NET
    href: SonarCloud.NET.html
  - name: .
  - uid: SonarCloud.NET.Models
    name: Models
    href: SonarCloud.NET.Models.html
  spec.vb:
  - uid: SonarCloud
    name: SonarCloud
    href: SonarCloud.html
  - name: .
  - uid: SonarCloud.NET
    name: NET
    href: SonarCloud.NET.html
  - name: .
  - uid: SonarCloud.NET.Models
    name: Models
    href: SonarCloud.NET.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SonarCloud.NET.Models.Changelog.User*
  commentId: Overload:SonarCloud.NET.Models.Changelog.User
  href: SonarCloud.NET.Models.Changelog.html#SonarCloud_NET_Models_Changelog_User
  name: User
  nameWithType: Changelog.User
  fullName: SonarCloud.NET.Models.Changelog.User
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SonarCloud.NET.Models.Changelog.UserName*
  commentId: Overload:SonarCloud.NET.Models.Changelog.UserName
  href: SonarCloud.NET.Models.Changelog.html#SonarCloud_NET_Models_Changelog_UserName
  name: UserName
  nameWithType: Changelog.UserName
  fullName: SonarCloud.NET.Models.Changelog.UserName
- uid: SonarCloud.NET.Models.Changelog.CreationDate*
  commentId: Overload:SonarCloud.NET.Models.Changelog.CreationDate
  href: SonarCloud.NET.Models.Changelog.html#SonarCloud_NET_Models_Changelog_CreationDate
  name: CreationDate
  nameWithType: Changelog.CreationDate
  fullName: SonarCloud.NET.Models.Changelog.CreationDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: SonarCloud.NET.Models.Changelog.Diffs*
  commentId: Overload:SonarCloud.NET.Models.Changelog.Diffs
  href: SonarCloud.NET.Models.Changelog.html#SonarCloud_NET_Models_Changelog_Diffs
  name: Diffs
  nameWithType: Changelog.Diffs
  fullName: SonarCloud.NET.Models.Changelog.Diffs
- uid: SonarCloud.NET.Models.Changelog.Diff[]
  isExternal: true
  href: SonarCloud.NET.Models.Changelog.Diff.html
  name: Diff[]
  nameWithType: Changelog.Diff[]
  fullName: SonarCloud.NET.Models.Changelog.Diff[]
  nameWithType.vb: Changelog.Diff()
  fullName.vb: SonarCloud.NET.Models.Changelog.Diff()
  name.vb: Diff()
  spec.csharp:
  - uid: SonarCloud.NET.Models.Changelog.Diff
    name: Diff
    href: SonarCloud.NET.Models.Changelog.Diff.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SonarCloud.NET.Models.Changelog.Diff
    name: Diff
    href: SonarCloud.NET.Models.Changelog.Diff.html
  - name: (
  - name: )
- uid: SonarCloud.NET.Models.Changelog.Avatar*
  commentId: Overload:SonarCloud.NET.Models.Changelog.Avatar
  href: SonarCloud.NET.Models.Changelog.html#SonarCloud_NET_Models_Changelog_Avatar
  name: Avatar
  nameWithType: Changelog.Avatar
  fullName: SonarCloud.NET.Models.Changelog.Avatar
- uid: SonarCloud.NET.Models.Changelog.IsUserActive*
  commentId: Overload:SonarCloud.NET.Models.Changelog.IsUserActive
  href: SonarCloud.NET.Models.Changelog.html#SonarCloud_NET_Models_Changelog_IsUserActive
  name: IsUserActive
  nameWithType: Changelog.IsUserActive
  fullName: SonarCloud.NET.Models.Changelog.IsUserActive
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
