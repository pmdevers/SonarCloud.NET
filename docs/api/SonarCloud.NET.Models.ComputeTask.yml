### YamlMime:ManagedReference
items:
- uid: SonarCloud.NET.Models.ComputeTask
  commentId: T:SonarCloud.NET.Models.ComputeTask
  id: ComputeTask
  parent: SonarCloud.NET.Models
  children:
  - SonarCloud.NET.Models.ComputeTask.AnalysisId
  - SonarCloud.NET.Models.ComputeTask.Branch
  - SonarCloud.NET.Models.ComputeTask.BranchType
  - SonarCloud.NET.Models.ComputeTask.ComponentId
  - SonarCloud.NET.Models.ComputeTask.ComponentKey
  - SonarCloud.NET.Models.ComputeTask.ComponentName
  - SonarCloud.NET.Models.ComputeTask.ComponentQualifier
  - SonarCloud.NET.Models.ComputeTask.ErrorMessage
  - SonarCloud.NET.Models.ComputeTask.ErrorType
  - SonarCloud.NET.Models.ComputeTask.ExecutionTimeMs
  - SonarCloud.NET.Models.ComputeTask.FinishedAt
  - SonarCloud.NET.Models.ComputeTask.HasErrorStacktrace
  - SonarCloud.NET.Models.ComputeTask.HasScannerContext
  - SonarCloud.NET.Models.ComputeTask.Id
  - SonarCloud.NET.Models.ComputeTask.Organization
  - SonarCloud.NET.Models.ComputeTask.StartedAt
  - SonarCloud.NET.Models.ComputeTask.Status
  - SonarCloud.NET.Models.ComputeTask.SubmittedAt
  - SonarCloud.NET.Models.ComputeTask.Type
  langs:
  - csharp
  - vb
  name: ComputeTask
  nameWithType: ComputeTask
  fullName: SonarCloud.NET.Models.ComputeTask
  type: Class
  source:
    remote:
      path: src/SonarCloud.NET/Models/Task.cs
      branch: documentation
      repo: https://github.com/pmdevers/SonarCloud.NET.git
    id: ComputeTask
    path: src/SonarCloud.NET/Models/Task.cs
    startLine: 3
  assemblies:
  - SonarCloud.NET
  namespace: SonarCloud.NET.Models
  syntax:
    content: public class ComputeTask
    content.vb: Public Class ComputeTask
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: SonarCloud.NET.Models.ComputeTask.Organization
  commentId: P:SonarCloud.NET.Models.ComputeTask.Organization
  id: Organization
  parent: SonarCloud.NET.Models.ComputeTask
  langs:
  - csharp
  - vb
  name: Organization
  nameWithType: ComputeTask.Organization
  fullName: SonarCloud.NET.Models.ComputeTask.Organization
  type: Property
  source:
    remote:
      path: src/SonarCloud.NET/Models/Task.cs
      branch: documentation
      repo: https://github.com/pmdevers/SonarCloud.NET.git
    id: Organization
    path: src/SonarCloud.NET/Models/Task.cs
    startLine: 5
  assemblies:
  - SonarCloud.NET
  namespace: SonarCloud.NET.Models
  syntax:
    content: >-
      [JsonPropertyName("organization")]

      public string Organization { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("organization")>

      Public Property Organization As String
  overload: SonarCloud.NET.Models.ComputeTask.Organization*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: organization
- uid: SonarCloud.NET.Models.ComputeTask.Id
  commentId: P:SonarCloud.NET.Models.ComputeTask.Id
  id: Id
  parent: SonarCloud.NET.Models.ComputeTask
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ComputeTask.Id
  fullName: SonarCloud.NET.Models.ComputeTask.Id
  type: Property
  source:
    remote:
      path: src/SonarCloud.NET/Models/Task.cs
      branch: documentation
      repo: https://github.com/pmdevers/SonarCloud.NET.git
    id: Id
    path: src/SonarCloud.NET/Models/Task.cs
    startLine: 8
  assemblies:
  - SonarCloud.NET
  namespace: SonarCloud.NET.Models
  syntax:
    content: >-
      [JsonPropertyName("id")]

      public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("id")>

      Public Property Id As String
  overload: SonarCloud.NET.Models.ComputeTask.Id*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
- uid: SonarCloud.NET.Models.ComputeTask.Type
  commentId: P:SonarCloud.NET.Models.ComputeTask.Type
  id: Type
  parent: SonarCloud.NET.Models.ComputeTask
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ComputeTask.Type
  fullName: SonarCloud.NET.Models.ComputeTask.Type
  type: Property
  source:
    remote:
      path: src/SonarCloud.NET/Models/Task.cs
      branch: documentation
      repo: https://github.com/pmdevers/SonarCloud.NET.git
    id: Type
    path: src/SonarCloud.NET/Models/Task.cs
    startLine: 11
  assemblies:
  - SonarCloud.NET
  namespace: SonarCloud.NET.Models
  syntax:
    content: >-
      [JsonPropertyName("type")]

      public string Type { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("type")>

      Public Property Type As String
  overload: SonarCloud.NET.Models.ComputeTask.Type*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: type
- uid: SonarCloud.NET.Models.ComputeTask.ComponentId
  commentId: P:SonarCloud.NET.Models.ComputeTask.ComponentId
  id: ComponentId
  parent: SonarCloud.NET.Models.ComputeTask
  langs:
  - csharp
  - vb
  name: ComponentId
  nameWithType: ComputeTask.ComponentId
  fullName: SonarCloud.NET.Models.ComputeTask.ComponentId
  type: Property
  source:
    remote:
      path: src/SonarCloud.NET/Models/Task.cs
      branch: documentation
      repo: https://github.com/pmdevers/SonarCloud.NET.git
    id: ComponentId
    path: src/SonarCloud.NET/Models/Task.cs
    startLine: 14
  assemblies:
  - SonarCloud.NET
  namespace: SonarCloud.NET.Models
  syntax:
    content: >-
      [JsonPropertyName("componentId")]

      public string ComponentId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("componentId")>

      Public Property ComponentId As String
  overload: SonarCloud.NET.Models.ComputeTask.ComponentId*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: componentId
- uid: SonarCloud.NET.Models.ComputeTask.ComponentKey
  commentId: P:SonarCloud.NET.Models.ComputeTask.ComponentKey
  id: ComponentKey
  parent: SonarCloud.NET.Models.ComputeTask
  langs:
  - csharp
  - vb
  name: ComponentKey
  nameWithType: ComputeTask.ComponentKey
  fullName: SonarCloud.NET.Models.ComputeTask.ComponentKey
  type: Property
  source:
    remote:
      path: src/SonarCloud.NET/Models/Task.cs
      branch: documentation
      repo: https://github.com/pmdevers/SonarCloud.NET.git
    id: ComponentKey
    path: src/SonarCloud.NET/Models/Task.cs
    startLine: 17
  assemblies:
  - SonarCloud.NET
  namespace: SonarCloud.NET.Models
  syntax:
    content: >-
      [JsonPropertyName("componentKey")]

      public string ComponentKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("componentKey")>

      Public Property ComponentKey As String
  overload: SonarCloud.NET.Models.ComputeTask.ComponentKey*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: componentKey
- uid: SonarCloud.NET.Models.ComputeTask.ComponentName
  commentId: P:SonarCloud.NET.Models.ComputeTask.ComponentName
  id: ComponentName
  parent: SonarCloud.NET.Models.ComputeTask
  langs:
  - csharp
  - vb
  name: ComponentName
  nameWithType: ComputeTask.ComponentName
  fullName: SonarCloud.NET.Models.ComputeTask.ComponentName
  type: Property
  source:
    remote:
      path: src/SonarCloud.NET/Models/Task.cs
      branch: documentation
      repo: https://github.com/pmdevers/SonarCloud.NET.git
    id: ComponentName
    path: src/SonarCloud.NET/Models/Task.cs
    startLine: 20
  assemblies:
  - SonarCloud.NET
  namespace: SonarCloud.NET.Models
  syntax:
    content: >-
      [JsonPropertyName("componentName")]

      public string ComponentName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("componentName")>

      Public Property ComponentName As String
  overload: SonarCloud.NET.Models.ComputeTask.ComponentName*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: componentName
- uid: SonarCloud.NET.Models.ComputeTask.ComponentQualifier
  commentId: P:SonarCloud.NET.Models.ComputeTask.ComponentQualifier
  id: ComponentQualifier
  parent: SonarCloud.NET.Models.ComputeTask
  langs:
  - csharp
  - vb
  name: ComponentQualifier
  nameWithType: ComputeTask.ComponentQualifier
  fullName: SonarCloud.NET.Models.ComputeTask.ComponentQualifier
  type: Property
  source:
    remote:
      path: src/SonarCloud.NET/Models/Task.cs
      branch: documentation
      repo: https://github.com/pmdevers/SonarCloud.NET.git
    id: ComponentQualifier
    path: src/SonarCloud.NET/Models/Task.cs
    startLine: 23
  assemblies:
  - SonarCloud.NET
  namespace: SonarCloud.NET.Models
  syntax:
    content: >-
      [JsonPropertyName("componentQualifier")]

      public string ComponentQualifier { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("componentQualifier")>

      Public Property ComponentQualifier As String
  overload: SonarCloud.NET.Models.ComputeTask.ComponentQualifier*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: componentQualifier
- uid: SonarCloud.NET.Models.ComputeTask.AnalysisId
  commentId: P:SonarCloud.NET.Models.ComputeTask.AnalysisId
  id: AnalysisId
  parent: SonarCloud.NET.Models.ComputeTask
  langs:
  - csharp
  - vb
  name: AnalysisId
  nameWithType: ComputeTask.AnalysisId
  fullName: SonarCloud.NET.Models.ComputeTask.AnalysisId
  type: Property
  source:
    remote:
      path: src/SonarCloud.NET/Models/Task.cs
      branch: documentation
      repo: https://github.com/pmdevers/SonarCloud.NET.git
    id: AnalysisId
    path: src/SonarCloud.NET/Models/Task.cs
    startLine: 26
  assemblies:
  - SonarCloud.NET
  namespace: SonarCloud.NET.Models
  syntax:
    content: >-
      [JsonPropertyName("analysisId")]

      public string AnalysisId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("analysisId")>

      Public Property AnalysisId As String
  overload: SonarCloud.NET.Models.ComputeTask.AnalysisId*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: analysisId
- uid: SonarCloud.NET.Models.ComputeTask.Branch
  commentId: P:SonarCloud.NET.Models.ComputeTask.Branch
  id: Branch
  parent: SonarCloud.NET.Models.ComputeTask
  langs:
  - csharp
  - vb
  name: Branch
  nameWithType: ComputeTask.Branch
  fullName: SonarCloud.NET.Models.ComputeTask.Branch
  type: Property
  source:
    remote:
      path: src/SonarCloud.NET/Models/Task.cs
      branch: documentation
      repo: https://github.com/pmdevers/SonarCloud.NET.git
    id: Branch
    path: src/SonarCloud.NET/Models/Task.cs
    startLine: 29
  assemblies:
  - SonarCloud.NET
  namespace: SonarCloud.NET.Models
  syntax:
    content: >-
      [JsonPropertyName("branch")]

      public string Branch { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("branch")>

      Public Property Branch As String
  overload: SonarCloud.NET.Models.ComputeTask.Branch*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: branch
- uid: SonarCloud.NET.Models.ComputeTask.BranchType
  commentId: P:SonarCloud.NET.Models.ComputeTask.BranchType
  id: BranchType
  parent: SonarCloud.NET.Models.ComputeTask
  langs:
  - csharp
  - vb
  name: BranchType
  nameWithType: ComputeTask.BranchType
  fullName: SonarCloud.NET.Models.ComputeTask.BranchType
  type: Property
  source:
    remote:
      path: src/SonarCloud.NET/Models/Task.cs
      branch: documentation
      repo: https://github.com/pmdevers/SonarCloud.NET.git
    id: BranchType
    path: src/SonarCloud.NET/Models/Task.cs
    startLine: 32
  assemblies:
  - SonarCloud.NET
  namespace: SonarCloud.NET.Models
  syntax:
    content: >-
      [JsonPropertyName("branchType")]

      public string BranchType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("branchType")>

      Public Property BranchType As String
  overload: SonarCloud.NET.Models.ComputeTask.BranchType*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: branchType
- uid: SonarCloud.NET.Models.ComputeTask.Status
  commentId: P:SonarCloud.NET.Models.ComputeTask.Status
  id: Status
  parent: SonarCloud.NET.Models.ComputeTask
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: ComputeTask.Status
  fullName: SonarCloud.NET.Models.ComputeTask.Status
  type: Property
  source:
    remote:
      path: src/SonarCloud.NET/Models/Task.cs
      branch: documentation
      repo: https://github.com/pmdevers/SonarCloud.NET.git
    id: Status
    path: src/SonarCloud.NET/Models/Task.cs
    startLine: 35
  assemblies:
  - SonarCloud.NET
  namespace: SonarCloud.NET.Models
  syntax:
    content: >-
      [JsonPropertyName("status")]

      public string Status { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("status")>

      Public Property Status As String
  overload: SonarCloud.NET.Models.ComputeTask.Status*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: status
- uid: SonarCloud.NET.Models.ComputeTask.SubmittedAt
  commentId: P:SonarCloud.NET.Models.ComputeTask.SubmittedAt
  id: SubmittedAt
  parent: SonarCloud.NET.Models.ComputeTask
  langs:
  - csharp
  - vb
  name: SubmittedAt
  nameWithType: ComputeTask.SubmittedAt
  fullName: SonarCloud.NET.Models.ComputeTask.SubmittedAt
  type: Property
  source:
    remote:
      path: src/SonarCloud.NET/Models/Task.cs
      branch: documentation
      repo: https://github.com/pmdevers/SonarCloud.NET.git
    id: SubmittedAt
    path: src/SonarCloud.NET/Models/Task.cs
    startLine: 38
  assemblies:
  - SonarCloud.NET
  namespace: SonarCloud.NET.Models
  syntax:
    content: >-
      [JsonPropertyName("submittedAt")]

      public DateTime SubmittedAt { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <JsonPropertyName("submittedAt")>

      Public Property SubmittedAt As Date
  overload: SonarCloud.NET.Models.ComputeTask.SubmittedAt*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: submittedAt
- uid: SonarCloud.NET.Models.ComputeTask.StartedAt
  commentId: P:SonarCloud.NET.Models.ComputeTask.StartedAt
  id: StartedAt
  parent: SonarCloud.NET.Models.ComputeTask
  langs:
  - csharp
  - vb
  name: StartedAt
  nameWithType: ComputeTask.StartedAt
  fullName: SonarCloud.NET.Models.ComputeTask.StartedAt
  type: Property
  source:
    remote:
      path: src/SonarCloud.NET/Models/Task.cs
      branch: documentation
      repo: https://github.com/pmdevers/SonarCloud.NET.git
    id: StartedAt
    path: src/SonarCloud.NET/Models/Task.cs
    startLine: 41
  assemblies:
  - SonarCloud.NET
  namespace: SonarCloud.NET.Models
  syntax:
    content: >-
      [JsonPropertyName("startedAt")]

      public DateTime StartedAt { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <JsonPropertyName("startedAt")>

      Public Property StartedAt As Date
  overload: SonarCloud.NET.Models.ComputeTask.StartedAt*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: startedAt
- uid: SonarCloud.NET.Models.ComputeTask.FinishedAt
  commentId: P:SonarCloud.NET.Models.ComputeTask.FinishedAt
  id: FinishedAt
  parent: SonarCloud.NET.Models.ComputeTask
  langs:
  - csharp
  - vb
  name: FinishedAt
  nameWithType: ComputeTask.FinishedAt
  fullName: SonarCloud.NET.Models.ComputeTask.FinishedAt
  type: Property
  source:
    remote:
      path: src/SonarCloud.NET/Models/Task.cs
      branch: documentation
      repo: https://github.com/pmdevers/SonarCloud.NET.git
    id: FinishedAt
    path: src/SonarCloud.NET/Models/Task.cs
    startLine: 44
  assemblies:
  - SonarCloud.NET
  namespace: SonarCloud.NET.Models
  syntax:
    content: >-
      [JsonPropertyName("finishedAt")]

      public DateTime FinishedAt { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <JsonPropertyName("finishedAt")>

      Public Property FinishedAt As Date
  overload: SonarCloud.NET.Models.ComputeTask.FinishedAt*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: finishedAt
- uid: SonarCloud.NET.Models.ComputeTask.ExecutionTimeMs
  commentId: P:SonarCloud.NET.Models.ComputeTask.ExecutionTimeMs
  id: ExecutionTimeMs
  parent: SonarCloud.NET.Models.ComputeTask
  langs:
  - csharp
  - vb
  name: ExecutionTimeMs
  nameWithType: ComputeTask.ExecutionTimeMs
  fullName: SonarCloud.NET.Models.ComputeTask.ExecutionTimeMs
  type: Property
  source:
    remote:
      path: src/SonarCloud.NET/Models/Task.cs
      branch: documentation
      repo: https://github.com/pmdevers/SonarCloud.NET.git
    id: ExecutionTimeMs
    path: src/SonarCloud.NET/Models/Task.cs
    startLine: 47
  assemblies:
  - SonarCloud.NET
  namespace: SonarCloud.NET.Models
  syntax:
    content: >-
      [JsonPropertyName("executionTimeMs")]

      public int ExecutionTimeMs { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonPropertyName("executionTimeMs")>

      Public Property ExecutionTimeMs As Integer
  overload: SonarCloud.NET.Models.ComputeTask.ExecutionTimeMs*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: executionTimeMs
- uid: SonarCloud.NET.Models.ComputeTask.ErrorMessage
  commentId: P:SonarCloud.NET.Models.ComputeTask.ErrorMessage
  id: ErrorMessage
  parent: SonarCloud.NET.Models.ComputeTask
  langs:
  - csharp
  - vb
  name: ErrorMessage
  nameWithType: ComputeTask.ErrorMessage
  fullName: SonarCloud.NET.Models.ComputeTask.ErrorMessage
  type: Property
  source:
    remote:
      path: src/SonarCloud.NET/Models/Task.cs
      branch: documentation
      repo: https://github.com/pmdevers/SonarCloud.NET.git
    id: ErrorMessage
    path: src/SonarCloud.NET/Models/Task.cs
    startLine: 50
  assemblies:
  - SonarCloud.NET
  namespace: SonarCloud.NET.Models
  syntax:
    content: >-
      [JsonPropertyName("errorMessage")]

      public string? ErrorMessage { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("errorMessage")>

      Public Property ErrorMessage As String
  overload: SonarCloud.NET.Models.ComputeTask.ErrorMessage*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: errorMessage
- uid: SonarCloud.NET.Models.ComputeTask.ErrorType
  commentId: P:SonarCloud.NET.Models.ComputeTask.ErrorType
  id: ErrorType
  parent: SonarCloud.NET.Models.ComputeTask
  langs:
  - csharp
  - vb
  name: ErrorType
  nameWithType: ComputeTask.ErrorType
  fullName: SonarCloud.NET.Models.ComputeTask.ErrorType
  type: Property
  source:
    remote:
      path: src/SonarCloud.NET/Models/Task.cs
      branch: documentation
      repo: https://github.com/pmdevers/SonarCloud.NET.git
    id: ErrorType
    path: src/SonarCloud.NET/Models/Task.cs
    startLine: 53
  assemblies:
  - SonarCloud.NET
  namespace: SonarCloud.NET.Models
  syntax:
    content: >-
      [JsonPropertyName("errorType")]

      public string? ErrorType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("errorType")>

      Public Property ErrorType As String
  overload: SonarCloud.NET.Models.ComputeTask.ErrorType*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: errorType
- uid: SonarCloud.NET.Models.ComputeTask.HasErrorStacktrace
  commentId: P:SonarCloud.NET.Models.ComputeTask.HasErrorStacktrace
  id: HasErrorStacktrace
  parent: SonarCloud.NET.Models.ComputeTask
  langs:
  - csharp
  - vb
  name: HasErrorStacktrace
  nameWithType: ComputeTask.HasErrorStacktrace
  fullName: SonarCloud.NET.Models.ComputeTask.HasErrorStacktrace
  type: Property
  source:
    remote:
      path: src/SonarCloud.NET/Models/Task.cs
      branch: documentation
      repo: https://github.com/pmdevers/SonarCloud.NET.git
    id: HasErrorStacktrace
    path: src/SonarCloud.NET/Models/Task.cs
    startLine: 56
  assemblies:
  - SonarCloud.NET
  namespace: SonarCloud.NET.Models
  syntax:
    content: >-
      [JsonPropertyName("hasErrorStacktrace")]

      public bool HasErrorStacktrace { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("hasErrorStacktrace")>

      Public Property HasErrorStacktrace As Boolean
  overload: SonarCloud.NET.Models.ComputeTask.HasErrorStacktrace*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: hasErrorStacktrace
- uid: SonarCloud.NET.Models.ComputeTask.HasScannerContext
  commentId: P:SonarCloud.NET.Models.ComputeTask.HasScannerContext
  id: HasScannerContext
  parent: SonarCloud.NET.Models.ComputeTask
  langs:
  - csharp
  - vb
  name: HasScannerContext
  nameWithType: ComputeTask.HasScannerContext
  fullName: SonarCloud.NET.Models.ComputeTask.HasScannerContext
  type: Property
  source:
    remote:
      path: src/SonarCloud.NET/Models/Task.cs
      branch: documentation
      repo: https://github.com/pmdevers/SonarCloud.NET.git
    id: HasScannerContext
    path: src/SonarCloud.NET/Models/Task.cs
    startLine: 59
  assemblies:
  - SonarCloud.NET
  namespace: SonarCloud.NET.Models
  syntax:
    content: >-
      [JsonPropertyName("hasScannerContext")]

      public bool HasScannerContext { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("hasScannerContext")>

      Public Property HasScannerContext As Boolean
  overload: SonarCloud.NET.Models.ComputeTask.HasScannerContext*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: hasScannerContext
references:
- uid: SonarCloud.NET.Models
  commentId: N:SonarCloud.NET.Models
  href: SonarCloud.html
  name: SonarCloud.NET.Models
  nameWithType: SonarCloud.NET.Models
  fullName: SonarCloud.NET.Models
  spec.csharp:
  - uid: SonarCloud
    name: SonarCloud
    href: SonarCloud.html
  - name: .
  - uid: SonarCloud.NET
    name: NET
    href: SonarCloud.NET.html
  - name: .
  - uid: SonarCloud.NET.Models
    name: Models
    href: SonarCloud.NET.Models.html
  spec.vb:
  - uid: SonarCloud
    name: SonarCloud
    href: SonarCloud.html
  - name: .
  - uid: SonarCloud.NET
    name: NET
    href: SonarCloud.NET.html
  - name: .
  - uid: SonarCloud.NET.Models
    name: Models
    href: SonarCloud.NET.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SonarCloud.NET.Models.ComputeTask.Organization*
  commentId: Overload:SonarCloud.NET.Models.ComputeTask.Organization
  href: SonarCloud.NET.Models.ComputeTask.html#SonarCloud_NET_Models_ComputeTask_Organization
  name: Organization
  nameWithType: ComputeTask.Organization
  fullName: SonarCloud.NET.Models.ComputeTask.Organization
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SonarCloud.NET.Models.ComputeTask.Id*
  commentId: Overload:SonarCloud.NET.Models.ComputeTask.Id
  href: SonarCloud.NET.Models.ComputeTask.html#SonarCloud_NET_Models_ComputeTask_Id
  name: Id
  nameWithType: ComputeTask.Id
  fullName: SonarCloud.NET.Models.ComputeTask.Id
- uid: SonarCloud.NET.Models.ComputeTask.Type*
  commentId: Overload:SonarCloud.NET.Models.ComputeTask.Type
  href: SonarCloud.NET.Models.ComputeTask.html#SonarCloud_NET_Models_ComputeTask_Type
  name: Type
  nameWithType: ComputeTask.Type
  fullName: SonarCloud.NET.Models.ComputeTask.Type
- uid: SonarCloud.NET.Models.ComputeTask.ComponentId*
  commentId: Overload:SonarCloud.NET.Models.ComputeTask.ComponentId
  href: SonarCloud.NET.Models.ComputeTask.html#SonarCloud_NET_Models_ComputeTask_ComponentId
  name: ComponentId
  nameWithType: ComputeTask.ComponentId
  fullName: SonarCloud.NET.Models.ComputeTask.ComponentId
- uid: SonarCloud.NET.Models.ComputeTask.ComponentKey*
  commentId: Overload:SonarCloud.NET.Models.ComputeTask.ComponentKey
  href: SonarCloud.NET.Models.ComputeTask.html#SonarCloud_NET_Models_ComputeTask_ComponentKey
  name: ComponentKey
  nameWithType: ComputeTask.ComponentKey
  fullName: SonarCloud.NET.Models.ComputeTask.ComponentKey
- uid: SonarCloud.NET.Models.ComputeTask.ComponentName*
  commentId: Overload:SonarCloud.NET.Models.ComputeTask.ComponentName
  href: SonarCloud.NET.Models.ComputeTask.html#SonarCloud_NET_Models_ComputeTask_ComponentName
  name: ComponentName
  nameWithType: ComputeTask.ComponentName
  fullName: SonarCloud.NET.Models.ComputeTask.ComponentName
- uid: SonarCloud.NET.Models.ComputeTask.ComponentQualifier*
  commentId: Overload:SonarCloud.NET.Models.ComputeTask.ComponentQualifier
  href: SonarCloud.NET.Models.ComputeTask.html#SonarCloud_NET_Models_ComputeTask_ComponentQualifier
  name: ComponentQualifier
  nameWithType: ComputeTask.ComponentQualifier
  fullName: SonarCloud.NET.Models.ComputeTask.ComponentQualifier
- uid: SonarCloud.NET.Models.ComputeTask.AnalysisId*
  commentId: Overload:SonarCloud.NET.Models.ComputeTask.AnalysisId
  href: SonarCloud.NET.Models.ComputeTask.html#SonarCloud_NET_Models_ComputeTask_AnalysisId
  name: AnalysisId
  nameWithType: ComputeTask.AnalysisId
  fullName: SonarCloud.NET.Models.ComputeTask.AnalysisId
- uid: SonarCloud.NET.Models.ComputeTask.Branch*
  commentId: Overload:SonarCloud.NET.Models.ComputeTask.Branch
  href: SonarCloud.NET.Models.ComputeTask.html#SonarCloud_NET_Models_ComputeTask_Branch
  name: Branch
  nameWithType: ComputeTask.Branch
  fullName: SonarCloud.NET.Models.ComputeTask.Branch
- uid: SonarCloud.NET.Models.ComputeTask.BranchType*
  commentId: Overload:SonarCloud.NET.Models.ComputeTask.BranchType
  href: SonarCloud.NET.Models.ComputeTask.html#SonarCloud_NET_Models_ComputeTask_BranchType
  name: BranchType
  nameWithType: ComputeTask.BranchType
  fullName: SonarCloud.NET.Models.ComputeTask.BranchType
- uid: SonarCloud.NET.Models.ComputeTask.Status*
  commentId: Overload:SonarCloud.NET.Models.ComputeTask.Status
  href: SonarCloud.NET.Models.ComputeTask.html#SonarCloud_NET_Models_ComputeTask_Status
  name: Status
  nameWithType: ComputeTask.Status
  fullName: SonarCloud.NET.Models.ComputeTask.Status
- uid: SonarCloud.NET.Models.ComputeTask.SubmittedAt*
  commentId: Overload:SonarCloud.NET.Models.ComputeTask.SubmittedAt
  href: SonarCloud.NET.Models.ComputeTask.html#SonarCloud_NET_Models_ComputeTask_SubmittedAt
  name: SubmittedAt
  nameWithType: ComputeTask.SubmittedAt
  fullName: SonarCloud.NET.Models.ComputeTask.SubmittedAt
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: SonarCloud.NET.Models.ComputeTask.StartedAt*
  commentId: Overload:SonarCloud.NET.Models.ComputeTask.StartedAt
  href: SonarCloud.NET.Models.ComputeTask.html#SonarCloud_NET_Models_ComputeTask_StartedAt
  name: StartedAt
  nameWithType: ComputeTask.StartedAt
  fullName: SonarCloud.NET.Models.ComputeTask.StartedAt
- uid: SonarCloud.NET.Models.ComputeTask.FinishedAt*
  commentId: Overload:SonarCloud.NET.Models.ComputeTask.FinishedAt
  href: SonarCloud.NET.Models.ComputeTask.html#SonarCloud_NET_Models_ComputeTask_FinishedAt
  name: FinishedAt
  nameWithType: ComputeTask.FinishedAt
  fullName: SonarCloud.NET.Models.ComputeTask.FinishedAt
- uid: SonarCloud.NET.Models.ComputeTask.ExecutionTimeMs*
  commentId: Overload:SonarCloud.NET.Models.ComputeTask.ExecutionTimeMs
  href: SonarCloud.NET.Models.ComputeTask.html#SonarCloud_NET_Models_ComputeTask_ExecutionTimeMs
  name: ExecutionTimeMs
  nameWithType: ComputeTask.ExecutionTimeMs
  fullName: SonarCloud.NET.Models.ComputeTask.ExecutionTimeMs
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SonarCloud.NET.Models.ComputeTask.ErrorMessage*
  commentId: Overload:SonarCloud.NET.Models.ComputeTask.ErrorMessage
  href: SonarCloud.NET.Models.ComputeTask.html#SonarCloud_NET_Models_ComputeTask_ErrorMessage
  name: ErrorMessage
  nameWithType: ComputeTask.ErrorMessage
  fullName: SonarCloud.NET.Models.ComputeTask.ErrorMessage
- uid: SonarCloud.NET.Models.ComputeTask.ErrorType*
  commentId: Overload:SonarCloud.NET.Models.ComputeTask.ErrorType
  href: SonarCloud.NET.Models.ComputeTask.html#SonarCloud_NET_Models_ComputeTask_ErrorType
  name: ErrorType
  nameWithType: ComputeTask.ErrorType
  fullName: SonarCloud.NET.Models.ComputeTask.ErrorType
- uid: SonarCloud.NET.Models.ComputeTask.HasErrorStacktrace*
  commentId: Overload:SonarCloud.NET.Models.ComputeTask.HasErrorStacktrace
  href: SonarCloud.NET.Models.ComputeTask.html#SonarCloud_NET_Models_ComputeTask_HasErrorStacktrace
  name: HasErrorStacktrace
  nameWithType: ComputeTask.HasErrorStacktrace
  fullName: SonarCloud.NET.Models.ComputeTask.HasErrorStacktrace
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SonarCloud.NET.Models.ComputeTask.HasScannerContext*
  commentId: Overload:SonarCloud.NET.Models.ComputeTask.HasScannerContext
  href: SonarCloud.NET.Models.ComputeTask.html#SonarCloud_NET_Models_ComputeTask_HasScannerContext
  name: HasScannerContext
  nameWithType: ComputeTask.HasScannerContext
  fullName: SonarCloud.NET.Models.ComputeTask.HasScannerContext
